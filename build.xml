<?xml version="1.0"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project name="lire-request-handler" default="go" xmlns:ivy="antlib:org.apache.ivy.ant">	
    <description>
        This buildfile is used to build and package the LIRE RequestHandler for
        SOLR-4.6-SNAPSHOT.jar
    </description>

    <property name="src" value="src/main/java" />
    <property name="config" value="src/main/resources" />
    <property name="build" value="classes" />
    <property name="dist" value="dist" />
    <property name="versionstring" value="v0.1.0" />
    <property name="solrlib" value="/data/lucid/conf/solr/cores/media_4/lib/lire" />
    <!-- <property name="solrlib" value="/Users/ferdous/projects/digitalcandy/search-app/conf/solr/cores/visualindex_19/lib/lire"/> -->
    <property name="test" value="src/main/test" />
    <!-- path to documentation like README or CHANGES -->
    <property name="doc" value="src/main/doc" />
    <!-- path to additional files like installer scripts, icons and batch files -->
    <property name="add.files" value="add.files" />

    <property name="ivy.install.version" value="2.4.0-rc1" />
    <property name="ivy.jar.dir" value="${basedir}/ivy" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
    <property name="lib.dir" value="lib" />
    <property name="build.dir" value="classes" />
    <property name="src.dir" value="src" />
	
    <target name="download-ivy" unless="skip.download">
        <mkdir dir="${ivy.jar.dir}" />
        <echo message="installing ivy..." />
        <get
            src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
            dest="${ivy.jar.file}" usetimestamp="true" />
    </target>

    <path id="lib.path.id">
        <pathelement location="${build}" />
        <fileset dir="${lib.dir}">
            <include name="*.jar" />
        </fileset>
    </path>

    <path id="run.path.id">
        <path refid="lib.path.id" />
        <path location="${build.dir}" />
    </path>


    <!-- define the classpath -->
    <path id="classpath.path">
        <pathelement location="${build}" />
        <fileset dir="lib">
            <include name="*.jar" />
        </fileset>
    </path>

    <target name="init" description="--> initialize">
        <tstamp />
        <tstamp>
            <format property="touch.time" pattern="dd.MM.yyyy hh:mm aa" />
        </tstamp>
        <mkdir dir="${build}" />
    </target>


    <target name="compile" depends="clean, init, install-ivy"
                description="--> compile">
        <propertyfile file="${config}/build.properties"
                              comment="Properties of this specific CALIPH build">
            <entry key="build-date" type="date" value="now" />
            <entry key="build-number" type="int" value="1" operation="+" />
        </propertyfile>
        <property file="${config}/build.properties" />
        <echo file="default.mf">Build-Date:
            ${touch.time}${line.separator}Build-Number:
            ${build-number}${line.separator}Class-Path: lib/commons-codec-1.8.jar
            lib/commons-math3-3.2.jar lib/JOpenSurf.jar lib/lire.jar
            lib/lucene-analyzers-common-4.6-SNAPSHOT.jar
            lib/lucene-core-4.6-SNAPSHOT.jar lib/lucene-queries-4.6-SNAPSHOT.jar
            lib/lucene-queryparser-4.6-SNAPSHOT.jar
            lib/solr-core-4.6-SNAPSHOT.jar
            lib/solr-solrj-4.6-SNAPSHOT.jar${line.separator}Main-Class:
            net.semanticmetadata.lire.solr.ParallelSolrIndexer${line.separator}</echo>
        <javac srcdir="${src}" destdir="${build}" debug="true"
                       debuglevel="lines,vars,source" includeantruntime="false">
            <classpath refid="classpath.path" />
        </javac>
        <copy todir="${build}">
            <fileset dir="${src}">
                <patternset>
                    <include name="**/*.*" />
                    <exclude name="**/*.java" />
                    <exclude name="**/*.html" />
                    <exclude name="**/.svn/*" />
                    <exclude name="**/.svn/*" />
                </patternset>
            </fileset>
        </copy>
    </target>

    <target name="dist" depends="compile"
                description="--> distribute jar. depends on compile">
        <mkdir dir="${dist}" />
        <mkdir dir="${dist}/lib" />

        <copy todir="${dist}/lib">
            <fileset dir="lib">
                <patternset>
                    <include name="**/*.*" />
                    <exclude name="**/CVS/*" />
                    <exclude name="**/.svn/*" />
                </patternset>
            </fileset>
        </copy>

        <unjar src="lib/lire.jar" dest="${build}" />
        <jar jarfile="${dist}/lire-request-handler.jar" manifest="default.mf"
                     basedir="${build}">
            <exclude name="**/apache/**" />
        </jar>
    </target>

    <target name="clean_solr_lib" description="--> clean the solr libs from solr lib">
        <delete dir="${solrlib}" includeemptydirs="true" quiet="false" />
        <mkdir dir="${solrlib}" />
    </target>


    <target name="copy_jar_to_jetty" depends="dist,clean_solr_lib"
                description="--> copy dist jar to solr lib path. depends on dist">
        <copydir src="${dist}/lib" dest="${solrlib}/lib" />
        <copy file="dist/lire-request-handler.jar" todir="${solrlib}" />
    </target>

    <target name="install-ivy" depends="download-ivy" description="--> install ivy">
        <path id="ivy.lib.path">
            <pathelement location="${ivy.jar.file}" />
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant"
                         classpathref="ivy.lib.path" />
    </target>

    <target name="ivy-configure">
        <!-- [DW] ivy loses its configuration for some reason. cannot explain this. if
        you have an idea, fix it.
        unless="ivy.settings.uptodate" -->
        <!-- override: just for safety, should be unnecessary -->
        <ivy:configure file="${common.dir}/ivy-settings.xml" override="true"/>
        <!-- <property name="ivy.settings.uptodate" value="true"/> -->
    </target>

    <target name="resolve" depends="ivy-availability-check,ivy-configure">
        <!-- todo, make this a property or something. 
        only special cases need bundles -->
        <ivy:retrieve type="jar,bundle,test,test-jar,tests" log="download-only"
                          conf="${ivy.default.configuration}" sync="${ivy.sync}"/>
    </target>

    <property name="ivy_install_path" location="${user.home}/.ant/lib" />
    <property name="ivy_bootstrap_url1" value="http://repo1.maven.org/maven2"/>
    <!-- you might need to tweak this from china so it works -->
    <property name="ivy_bootstrap_url2" value="http://uk.maven.org/maven2"/>
    <property name="ivy_checksum_sha1" value="c5ebf1c253ad4959a29f4acfe696ee48cdd9f473"/>

    <target name="ivy-availability-check" unless="ivy.available">
        <condition property="ivy.available">
            <typefound uri="antlib:org.apache.ivy.ant" name="configure" />
        </condition>
        <antcall target="ivy-fail" />
    </target>

    <target name="ivy-fail" unless="ivy.available">
        <echo>
            This build requires Ivy and Ivy could not be found in your ant classpath.

            (Due to classpath issues and the recursive nature of the Lucene/Solr 
            build system, a local copy of Ivy can not be used an loaded dynamically 
            by the build.xml)

            You can either manually install a copy of Ivy ${ivy.bootstrap.version} in your ant classpath:
            http://ant.apache.org/manual/install.html#optionalTasks

            Or this build file can do it for you by running the Ivy Bootstrap target:
            ant ivy-bootstrap     
	     
            Either way you will only have to install Ivy one time.

            'ant ivy-bootstrap' will install a copy of Ivy into your Ant User Library:
            ${user.home}/.ant/lib
	     
            If you would prefer, you can have it installed into an alternative 
            directory using the "-Divy_install_path=/some/path/you/choose" option, 
            but you will have to specify this path every time you build Lucene/Solr 
            in the future...
            ant ivy-bootstrap -Divy_install_path=/some/path/you/choose
            ...
            ant -lib /some/path/you/choose clean compile
            ...
            ant -lib /some/path/you/choose clean compile

            If you have already run ivy-bootstrap, and still get this message, please 
            try using the "--noconfig" option when running ant, or editing your global
            ant config to allow the user lib to be loaded.  See the wiki for more details:
            http://wiki.apache.org/lucene-java/HowToContribute#antivy
        </echo>
        <fail>Ivy is not available</fail>
    </target>

    <target name="ivy-bootstrap" description="Download and install Ivy in the users ant lib dir" depends="ivy-bootstrap1,ivy-bootstrap2,ivy-checksum"/>

    <!-- try to download from repo1.maven.org -->
    <target name="ivy-bootstrap1">
        <ivy-download src="${ivy_bootstrap_url1}" dest="${ivy_install_path}"/>
        <available file="${ivy_install_path}/ivy-${ivy.bootstrap.version}.jar" property="ivy.bootstrap1.success" />
    </target> 

    <target name="ivy-bootstrap2" unless="ivy.bootstrap1.success">
        <ivy-download src="${ivy_bootstrap_url2}" dest="${ivy_install_path}"/>
    </target>

    <target name="ivy-checksum">
        <checksum file="${ivy_install_path}/ivy-${ivy.bootstrap.version}.jar"
                      property="${ivy_checksum_sha1}"
                      algorithm="SHA"
                      verifyproperty="ivy.checksum.success"/>
        <fail message="Checksum mismatch for ivy-${ivy.bootstrap.version}.jar. Please download this file manually">
            <condition>
                <isfalse value="${ivy.checksum.success}"/>
            </condition>
        </fail>
    </target>
	   
    <macrodef name="ivy-download">
        <attribute name="src"/>
        <attribute name="dest"/>
        <sequential>
            <mkdir dir="@{dest}"/>
            <echo message="installing ivy ${ivy.bootstrap.version} to ${ivy_install_path}"/>
            <get src="@{src}/org/apache/ivy/ivy/${ivy.bootstrap.version}/ivy-${ivy.bootstrap.version}.jar"
                   dest="@{dest}/ivy-${ivy.bootstrap.version}.jar" usetimestamp="true" ignoreerrors="true"/>
        </sequential>
    </macrodef>
	
    <target name="go" depends="compile" description="--> index histograms (default task)">
        <ivy:cachepath organisation="commons-lang" module="commons-lang"
                               revision="2.6" pathid="lib.path.id" inline="true" />
		
		

        <java classpathref="classpath.path"
                      classname="net.semanticmetadata.lire.solr.ParallelSolrIndexer" fork="true"
                      maxmemory="2048M" error="logs/indexer_error.log" output="logs/indexer_output.log">
            <jvmarg line="-Xmx2048M -server" />
            <!--<arg line="-i out.txt -n 16 -o all.xml -f"/> -->
            <arg line="-i out.txt -n 16 -f" />

        </java>
    </target>

    <target name="clean" description="--> clean the project">
        <delete dir="${build}" includeemptydirs="true" quiet="true" />
        <delete dir="${dist}" includeemptydirs="true" quiet="true" />
    </target>
    <target name="clean-ivy" description="--> clean the ivy installation">
        <delete dir="${ivy.jar.dir}" />
    </target>
    <target name="clean-cache" depends="install-ivy" description="--> clean the ivy cache">
        <ivy:cleancache />
    </target>

</project>
